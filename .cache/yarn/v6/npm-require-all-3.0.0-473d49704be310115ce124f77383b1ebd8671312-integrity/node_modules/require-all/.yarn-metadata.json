{
  "manifest": {
    "name": "require-all",
    "description": "An easy way to require all files within a directory.",
    "version": "3.0.0",
    "author": {
      "name": "Felix Geisendörfer",
      "email": "felix@debuggable.com",
      "url": "http://debuggable.com/"
    },
    "contributors": [
      {
        "name": "Douglas Christopher Wilson",
        "email": "doug@somethingdoug.com"
      },
      {
        "name": "Prince Obiechine Onyenike",
        "email": "leewaygroups@gmail.com"
      },
      {
        "name": "Nuno Job",
        "email": "nunojobpinto@gmail.com",
        "url": "http://nunojob.com"
      }
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/felixge/node-require-all.git"
    },
    "files": [
      "Changes.md",
      "LICENSE",
      "index.js",
      "Readme.md"
    ],
    "engines": {
      "node": ">= 0.8"
    },
    "scripts": {
      "test": "node test/test.js"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-require-all-3.0.0-473d49704be310115ce124f77383b1ebd8671312-integrity/node_modules/require-all/package.json",
    "readmeFilename": "Readme.md",
    "readme": "# require-all\n\nAn easy way to require all files within a directory.\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][travis-image]][travis-url]\n\n## Usage\n\n```js\nvar controllers = require('require-all')({\n  dirname     :  __dirname + '/controllers',\n  filter      :  /(.+Controller)\\.js$/,\n  excludeDirs :  /^\\.(git|svn)$/,\n  recursive   : true\n});\n\n// controllers now is an object with references to all modules matching the filter\n// for example:\n// { HomeController: function HomeController() {...}, ...}\n```\n\n## Advanced usage\n\nIf your objective is to simply require all .js and .json files in a directory\nyou can just pass a string to require-all:\n\n``` js\nvar libs = require('require-all')(__dirname + '/lib');\n```\n\n### Constructed object usage\n\nIf your directory contains files that all export constructors, you can require\nthem all and automatically construct the objects using `resolve`:\n\n```js\nvar controllers = require('require-all')({\n  dirname     :  __dirname + '/controllers',\n  filter      :  /(.+Controller)\\.js$/,\n  resolve     : function (Controller) {\n    return new Controller();\n  }\n});\n```\n\n### Alternative property names\n\nIf your directory contains files where the names do not match what you want in\nthe resulting property (for example, you want camelCase but the file names are\nsnake_case), then you can use the `map` function. The `map` function is called\non both file and directory names, as they are added to the resulting object.\n\n```js\nvar controllers = require('require-all')({\n  dirname :  __dirname + '/controllers',\n  filter  :  /(.+Controller)\\.js$/,\n  map     : function (name, path) {\n    return name.replace(/_([a-z])/g, function (m, c) {\n      return c.toUpperCase();\n    });\n  }\n});\n```\n\n### Filtering files\n\nIf your directory contains files that you do not want to require, or that you\nwant only a part of the file's name to be used as the property name, `filter`\ncan be a regular expression. In the following example, the `filter` is set to\n`/^(.+Controller)\\.js$/`, which means only files that end in \"Controller.js\"\nare required, and the resulting property name will be the name of the file\nwithout the \".js\" extension. For example, the file \"MainController.js\" will\nmatch, and since the first capture group will contain \"MainController\", that\nwill be the property name used. If no capture group is used, then the entire\nmatch will be used as the name.\n\n```js\nvar controllers = require('require-all')({\n  dirname : __dirname + '/controllers',\n  filter  : /^(.+Controller)\\.js$/\n});\n```\n\nFor even more advanced usage, the `filter` option also accepts a function that\nis invoked with the file name as the first argument. The filter function is\nexpected to return a falsy value to ignore the file, otherwise a string to use\nas the property name.\n\n```js\nvar controllers = requireAll({\n  dirname : __dirname + '/controllers',\n  filter  : function (fileName) {\n    var parts = fileName.split('-');\n    if (parts[1] !== 'Controller.js') return;\n    return parts[0];\n  }\n});\n```\n\nNote that empty directories are always excluded from the end result.\n\n[npm-image]: https://img.shields.io/npm/v/require-all.svg\n[npm-url]: https://npmjs.org/package/require-all\n[downloads-image]: https://img.shields.io/npm/dm/require-all.svg\n[downloads-url]: https://npmjs.org/package/require-all\n[travis-image]: https://img.shields.io/travis/felixge/node-require-all/master.svg\n[travis-url]: https://travis-ci.org/felixge/node-require-all\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2012 Felix Geisendörfer (felix@debuggable.com)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/require-all/-/require-all-3.0.0.tgz#473d49704be310115ce124f77383b1ebd8671312",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/require-all/-/require-all-3.0.0.tgz",
    "hash": "473d49704be310115ce124f77383b1ebd8671312",
    "integrity": "sha512-jPGN876lc5exWYrMcgZSd7U42P0PmVQzxnQB13fCSzmyGnqQWW4WUz5DosZ/qe24hz+5o9lSvW2epBNZ1xa6Fw== sha1-Rz1JcEvjEBFc4ST3c4Ox69hnExI=",
    "registry": "npm",
    "packageName": "require-all"
  },
  "registry": "npm",
  "hash": "473d49704be310115ce124f77383b1ebd8671312"
}