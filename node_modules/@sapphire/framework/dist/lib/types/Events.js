'use strict';

var discord_js = require('discord.js');

// src/lib/types/Events.ts
var Events = {
  ChannelCreate: discord_js.Events.ChannelCreate,
  ChannelDelete: discord_js.Events.ChannelDelete,
  ChannelPinsUpdate: discord_js.Events.ChannelPinsUpdate,
  ChannelUpdate: discord_js.Events.ChannelUpdate,
  ClientReady: discord_js.Events.ClientReady,
  Debug: discord_js.Events.Debug,
  Error: discord_js.Events.Error,
  GuildBanAdd: discord_js.Events.GuildBanAdd,
  GuildBanRemove: discord_js.Events.GuildBanRemove,
  GuildCreate: discord_js.Events.GuildCreate,
  GuildDelete: discord_js.Events.GuildDelete,
  GuildEmojiCreate: discord_js.Events.GuildEmojiCreate,
  GuildEmojiDelete: discord_js.Events.GuildEmojiDelete,
  GuildEmojiUpdate: discord_js.Events.GuildEmojiUpdate,
  GuildIntegrationsUpdate: discord_js.Events.GuildIntegrationsUpdate,
  GuildMemberAdd: discord_js.Events.GuildMemberAdd,
  GuildMemberAvailable: discord_js.Events.GuildMemberAdd,
  GuildMemberRemove: discord_js.Events.GuildMemberRemove,
  GuildMembersChunk: discord_js.Events.GuildMembersChunk,
  GuildMemberUpdate: discord_js.Events.GuildMemberUpdate,
  GuildRoleCreate: discord_js.Events.GuildRoleCreate,
  GuildRoleDelete: discord_js.Events.GuildRoleDelete,
  GuildRoleUpdate: discord_js.Events.GuildRoleUpdate,
  GuildStickerCreate: discord_js.Events.GuildStickerCreate,
  GuildStickerDelete: discord_js.Events.GuildStickerDelete,
  GuildStickerUpdate: discord_js.Events.GuildStickerUpdate,
  GuildUnavailable: discord_js.Events.GuildUnavailable,
  GuildUpdate: discord_js.Events.GuildUpdate,
  InteractionCreate: discord_js.Events.InteractionCreate,
  Invalidated: discord_js.Events.Invalidated,
  InviteCreate: discord_js.Events.InviteCreate,
  InviteDelete: discord_js.Events.InviteDelete,
  MessageBulkDelete: discord_js.Events.MessageBulkDelete,
  MessageCreate: discord_js.Events.MessageCreate,
  MessageDelete: discord_js.Events.MessageDelete,
  MessageReactionAdd: discord_js.Events.MessageReactionAdd,
  MessageReactionRemove: discord_js.Events.MessageReactionRemove,
  MessageReactionRemoveAll: discord_js.Events.MessageReactionRemoveAll,
  MessageReactionRemoveEmoji: discord_js.Events.MessageReactionRemoveEmoji,
  MessageUpdate: discord_js.Events.MessageUpdate,
  PresenceUpdate: discord_js.Events.PresenceUpdate,
  Raw: discord_js.Events.Raw,
  ShardDisconnect: discord_js.Events.ShardDisconnect,
  ShardError: discord_js.Events.ShardError,
  ShardReady: discord_js.Events.ShardReady,
  ShardReconnecting: discord_js.Events.ShardReconnecting,
  ShardResume: discord_js.Events.ShardResume,
  StageInstanceCreate: discord_js.Events.StageInstanceCreate,
  StageInstanceDelete: discord_js.Events.StageInstanceDelete,
  StageInstanceUpdate: discord_js.Events.StageInstanceUpdate,
  ThreadCreate: discord_js.Events.ThreadCreate,
  ThreadDelete: discord_js.Events.ThreadDelete,
  ThreadListSync: discord_js.Events.ThreadListSync,
  ThreadMembersUpdate: discord_js.Events.ThreadMembersUpdate,
  ThreadMemberUpdate: discord_js.Events.ThreadMemberUpdate,
  ThreadUpdate: discord_js.Events.ThreadUpdate,
  TypingStart: discord_js.Events.TypingStart,
  UserUpdate: discord_js.Events.UserUpdate,
  VoiceServerUpdate: discord_js.Events.VoiceServerUpdate,
  VoiceStateUpdate: discord_js.Events.VoiceStateUpdate,
  Warn: discord_js.Events.Warn,
  WebhooksUpdate: discord_js.Events.WebhooksUpdate,
  PreMessageParsed: "preMessageParsed",
  MentionPrefixOnly: "mentionPrefixOnly",
  NonPrefixedMessage: "nonPrefixedMessage",
  PrefixedMessage: "prefixedMessage",
  UnknownMessageCommandName: "unknownMessageCommandName",
  UnknownMessageCommand: "unknownMessageCommand",
  CommandDoesNotHaveMessageCommandHandler: "commandDoesNotHaveMessageCommandHandler",
  PreMessageCommandRun: "preMessageCommandRun",
  MessageCommandDenied: "messageCommandDenied",
  MessageCommandAccepted: "messageCommandAccepted",
  MessageCommandRun: "messageCommandRun",
  MessageCommandSuccess: "messageCommandSuccess",
  MessageCommandError: "messageCommandError",
  MessageCommandFinish: "messageCommandFinish",
  MessageCommandTypingError: "messageCommandTypingError",
  ListenerError: "listenerError",
  CommandApplicationCommandRegistryError: "commandApplicationCommandRegistryError",
  ApplicationCommandRegistriesRegistered: "applicationCommandRegistriesRegistered",
  PiecePostLoad: "piecePostLoad",
  PieceUnload: "pieceUnload",
  PluginLoaded: "pluginLoaded",
  InteractionHandlerParseError: "interactionHandlerParseError",
  InteractionHandlerError: "interactionHandlerError",
  PossibleAutocompleteInteraction: "possibleAutocompleteInteraction",
  CommandAutocompleteInteractionSuccess: "commandAutocompleteInteractionSuccess",
  CommandAutocompleteInteractionError: "commandAutocompleteInteractionError",
  PossibleChatInputCommand: "possibleChatInputCommand",
  UnknownChatInputCommand: "unknownChatInputCommand",
  CommandDoesNotHaveChatInputCommandHandler: "commandDoesNotHaveChatInputCommandHandler",
  PreChatInputCommandRun: "preChatInputCommandRun",
  ChatInputCommandDenied: "chatInputCommandDenied",
  ChatInputCommandAccepted: "chatInputCommandAccepted",
  ChatInputCommandRun: "chatInputCommandRun",
  ChatInputCommandSuccess: "chatInputCommandSuccess",
  ChatInputCommandError: "chatInputCommandError",
  ChatInputCommandFinish: "chatInputCommandFinish",
  PossibleContextMenuCommand: "possibleContextMenuCommand",
  UnknownContextMenuCommand: "unknownContextMenuCommand",
  CommandDoesNotHaveContextMenuCommandHandler: "commandDoesNotHaveContextMenuCommandHandler",
  PreContextMenuCommandRun: "preContextMenuCommandRun",
  ContextMenuCommandDenied: "contextMenuCommandDenied",
  ContextMenuCommandAccepted: "contextMenuCommandAccepted",
  ContextMenuCommandRun: "contextMenuCommandRun",
  ContextMenuCommandSuccess: "contextMenuCommandSuccess",
  ContextMenuCommandError: "contextMenuCommandError",
  ContextMenuCommandFinish: "contextMenuCommandFinish"
};

exports.Events = Events;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=Events.js.map